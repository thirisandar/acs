document.addEventListener("DOMContentLoaded",()=>{const getyear=document.getElementById("getyear");if(getyear){getyear.innerText=(new Date).getFullYear()}});async function translateText(text){if(!text)return"";const endpoint="/.netlify/functions/gemini-translate";const response=await fetch(endpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({text_to_translate:text})});if(!response.ok){const errorData=await response.json().catch(()=>({error:"Unknown server error"}));throw new Error(`Server translation failed: ${response.statusText}. Details: ${errorData.error}`)}const data=await response.json();if(data.final_prompt_en){return data.final_prompt_en}else{throw new Error("Invalid response format from the secure translation server.")}}document.addEventListener("DOMContentLoaded",()=>{const mainToggleBtn=document.getElementById("main-examples-toggle");const mainContent=document.getElementById("main-examples-content");if(mainToggleBtn&&mainContent){mainToggleBtn.addEventListener("click",()=>{mainToggleBtn.classList.toggle("active");mainContent.classList.toggle("active")});mainToggleBtn.classList.add("active");mainContent.classList.add("active")}const accordionHeaders=document.querySelectorAll(".accordion-header");accordionHeaders.forEach(header=>{header.addEventListener("click",()=>{const targetId=header.getAttribute("data-example");const targetContent=document.getElementById(targetId);accordionHeaders.forEach(h=>{if(h!==header){h.classList.remove("active");document.getElementById(h.getAttribute("data-example")).classList.remove("active")}});targetContent.classList.toggle("active");header.classList.toggle("active")})});document.querySelectorAll(".accordion-content").forEach(content=>content.classList.remove("active"));document.querySelectorAll(".accordion-header").forEach(header=>header.classList.remove("active"));const generatePromptBtn=document.getElementById("generate-prompt-btn");if(generatePromptBtn){generatePromptBtn.addEventListener("click",async event=>{event.preventDefault();const style_mm=document.getElementById("style-main").value;const subject_mm=document.getElementById("subject-main").value;const action_mm=document.getElementById("action-main").value;const environment_mm=document.getElementById("environment-main").value;const lighting_mm=document.getElementById("lighting-main").value;const fullBurmesePrompt=`${style_mm} ${subject_mm} ${action_mm}${environment_mm}${lighting_mm}`;generatePromptBtn.textContent="Translating and Generating...";generatePromptBtn.disabled=true;try{const final_prompt_en=await translateText(fullBurmesePrompt);const dataToSave={success:true,source:"image",style_mm:style_mm,subject_mm:subject_mm,action_mm:action_mm,environment_mm:environment_mm,lighting_mm:lighting_mm,final_prompt_en:final_prompt_en};localStorage.setItem("promptData",JSON.stringify(dataToSave));generatePromptBtn.textContent="✅ Generate & View Prompt";generatePromptBtn.disabled=false;window.location.href=`result.html`}catch(error){generatePromptBtn.textContent="❌ Translation Failed. Try Again.";generatePromptBtn.disabled=false;console.error("Translation Error:",error);alert("Translation Error: "+error.message+". Please ensure your browser is connected to the internet.")}})}const resetBtn=document.getElementById("reset-cprf-btn");if(resetBtn){resetBtn.addEventListener("click",()=>{document.getElementById("style-main").value="";document.getElementById("subject-main").value="";document.getElementById("action-main").value="";document.getElementById("environment-main").value="";document.getElementById("lighting-main").value="";document.getElementById("style-main").focus()})}});document.addEventListener("DOMContentLoaded",()=>{const mainToggleBtn=document.getElementById("main-examples-toggle");const mainContent=document.getElementById("main-examples-content");if(mainToggleBtn&&mainContent){mainToggleBtn.addEventListener("click",()=>{mainToggleBtn.classList.toggle("active");mainContent.classList.toggle("active")});mainToggleBtn.classList.add("active");mainContent.classList.add("active")}const accordionHeaders=document.querySelectorAll(".accordion-header");accordionHeaders.forEach(header=>{header.addEventListener("click",()=>{const targetId=header.getAttribute("data-example");const targetContent=document.getElementById(targetId);accordionHeaders.forEach(h=>{if(h!==header){h.classList.remove("active");document.getElementById(h.getAttribute("data-example")).classList.remove("active")}});targetContent.classList.toggle("active");header.classList.toggle("active")})});document.querySelectorAll(".accordion-content").forEach(content=>content.classList.remove("active"));document.querySelectorAll(".accordion-header").forEach(header=>header.classList.remove("active"));const generatePromptBtn=document.getElementById("generate-prompt-btn");if(generatePromptBtn){generatePromptBtn.addEventListener("click",async event=>{event.preventDefault();const context_mm=document.getElementById("content-main").value;const persona_mm=document.getElementById("persona-main").value;const result_mm=document.getElementById("result-main").value;const format_mm=document.getElementById("format-main").value;const fullBurmesePrompt=`${context_mm}${persona_mm}${result_mm}${format_mm}`;generatePromptBtn.textContent="Translating and Generating...";generatePromptBtn.disabled=true;try{const final_prompt_en=await translateText(fullBurmesePrompt);const dataToSave={success:true,source:"text",context_mm:context_mm,persona_mm:persona_mm,result_mm:result_mm,format_mm:format_mm,final_prompt_en:final_prompt_en};localStorage.setItem("promptData",JSON.stringify(dataToSave));generatePromptBtn.textContent="✅ Generate & View Prompt";generatePromptBtn.disabled=false;window.location.href=`result.html`}catch(error){generatePromptBtn.textContent="❌ Translation Failed. Try Again.";generatePromptBtn.disabled=false;console.error("Translation Error:",error);alert("Client-Side Translation Error: "+error.message+". Please ensure your browser is connected to the internet.")}})}async function translateText(text){if(!text)return"";const endpoint="/.netlify/functions/gemini-translate";const response=await fetch(endpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({text_to_translate:text})});if(!response.ok){const errorData=await response.json().catch(()=>({error:"Unknown server error"}));throw new Error(`Server translation failed: ${response.statusText}. Details: ${errorData.error}`)}const data=await response.json();if(data.final_prompt_en){return data.final_prompt_en}else{throw new Error("Invalid response format from the translation server.")}}const resetBtn=document.getElementById("reset-cprf-btn");if(resetBtn){resetBtn.addEventListener("click",()=>{document.getElementById("content-main").value="";document.getElementById("persona-main").value="";document.getElementById("result-main").value="";document.getElementById("format-main").value="";document.getElementById("content-main").focus()})}});async function translateText(text){if(!text)return"";const endpoint="/.netlify/functions/gemini-translate";const response=await fetch(endpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({text_to_translate:text})});if(!response.ok){const errorData=await response.json().catch(()=>({error:"Unknown server error"}));throw new Error(`Server translation failed: ${response.statusText}. Details: ${errorData.error}`)}const data=await response.json();if(data.final_prompt_en){return data.final_prompt_en}else{throw new Error("Invalid response format from the secure translation server.")}}document.addEventListener("DOMContentLoaded",()=>{const mainToggleBtn=document.getElementById("main-examples-toggle");const mainContent=document.getElementById("main-examples-content");if(mainToggleBtn&&mainContent){mainToggleBtn.addEventListener("click",()=>{mainToggleBtn.classList.toggle("active");mainContent.classList.toggle("active")});mainToggleBtn.classList.add("active");mainContent.classList.add("active")}const accordionHeaders=document.querySelectorAll(".accordion-header");accordionHeaders.forEach(header=>{header.addEventListener("click",()=>{const targetId=header.getAttribute("data-example");const targetContent=document.getElementById(targetId);accordionHeaders.forEach(h=>{if(h!==header){h.classList.remove("active");document.getElementById(h.getAttribute("data-example")).classList.remove("active")}});targetContent.classList.toggle("active");header.classList.toggle("active")})});document.querySelectorAll(".accordion-content").forEach(content=>content.classList.remove("active"));document.querySelectorAll(".accordion-header").forEach(header=>header.classList.remove("active"));const generatePromptBtn=document.getElementById("generate-prompt-btn");if(generatePromptBtn){generatePromptBtn.addEventListener("click",async event=>{event.preventDefault();const style_mm=document.getElementById("style-main").value;const subject_mm=document.getElementById("subject-main").value;const action_mm=document.getElementById("action-main").value;const environment_mm=document.getElementById("environment-main").value;const lighting_mm=document.getElementById("lighting-main").value;const camera_mm=document.getElementById("scene-main").value;const audio_mm=document.getElementById("audio-main").value;const fullBurmesePrompt=`${style_mm}${subject_mm}${action_mm}${environment_mm}${lighting_mm}${camera_mm}${audio_mm}`;generatePromptBtn.textContent="Translating and Generating...";generatePromptBtn.disabled=true;try{const final_prompt_en=await translateText(fullBurmesePrompt);const dataToSave={success:true,source:"video",style_mm:style_mm,subject_mm:subject_mm,action_mm:action_mm,environment_mm:environment_mm,lighting_mm:lighting_mm,camera_mm:camera_mm,audio_mm:audio_mm,final_prompt_en:final_prompt_en};localStorage.setItem("promptData",JSON.stringify(dataToSave));generatePromptBtn.textContent="✅ Generate & View Prompt";generatePromptBtn.disabled=false;window.location.href=`result.html`}catch(error){generatePromptBtn.textContent="❌ Translation Failed. Try Again.";generatePromptBtn.disabled=false;console.error("Translation Error:",error);alert("Translation Error: "+error.message+". Please ensure your browser is connected to the internet.")}})}const resetBtn=document.getElementById("reset-cprf-btn");if(resetBtn){resetBtn.addEventListener("click",()=>{document.getElementById("style-main").value="";document.getElementById("subject-main").value="";document.getElementById("action-main").value="";document.getElementById("environment-main").value="";document.getElementById("lighting-main").value="";document.getElementById("camera-main").value="";document.getElementById("audio-main").value="";document.getElementById("style-main").focus()})}});document.addEventListener("DOMContentLoaded",()=>{const detailsDiv=document.getElementById("original-inputs-details");const finalPromptPre=document.getElementById("final-prompt");const title=document.getElementById("page-title");const dataJSON=localStorage.getItem("promptData");const data=dataJSON?JSON.parse(dataJSON):null;if(data&&data.final_prompt_en){title.textContent="✅ Dynamic Prompt Translation Complete";let innerHTML="";if(data.source==="text"){title.textContent="📝 Text Prompt Result (CPRF)";innerHTML=`\n                <div class="cprf-section" style="--primary-color: var(--primary-blue);"><strong>Context (C):</strong> ${data.context_mm}</div>\n                <div class="cprf-section" style="--primary-color: var(--primary-blue);"><strong>Persona (P):</strong> ${data.persona_mm}</div>\n                <div class="cprf-section" style="--primary-color: var(--primary-blue);"><strong>Result (R):</strong> ${data.result_mm}</div>\n                <div class="cprf-section" style="--primary-color: var(--primary-blue);"><strong>Format (F):</strong> ${data.format_mm}</div>\n            `}else if(data.source==="image"){title.textContent="🖼️ Image Prompt Result (SSAEL)";innerHTML=`\n                <div class="cprf-section" style="--primary-color: #ffc107;"><strong>Style (S):</strong> ${data.style_mm}</div>\n                <div class="cprf-section" style="--primary-color: #ffc107;"><strong>Subject (S):</strong> ${data.subject_mm}</div>\n                <div class="cprf-section" style="--primary-color: #ffc107;"><strong>Action (A):</strong> ${data.action_mm}</div>\n                <div class="cprf-section" style="--primary-color: #ffc107;"><strong>Environment (E):</strong> ${data.environment_mm}</div>\n                <div class="cprf-section" style="--primary-color: #ffc107;"><strong>Lighting (L):</strong> ${data.lighting_mm}</div>\n            `}else if(data.source==="video"){title.textContent="🎥 Video Prompt Result (SSAELSA)";innerHTML=`\n                <div class="cprf-section" style="--primary-color: #dc3545;"><strong>Style (S):</strong> ${data.style_mm}</div>\n                <div class="cprf-section" style="--primary-color: #dc3545;"><strong>Subject (S):</strong> ${data.subject_mm}</div>\n                <div class="cprf-section" style="--primary-color: #dc3545;"><strong>Action (A):</strong> ${data.action_mm}</div>\n                <div class="cprf-section" style="--primary-color: #dc3545;"><strong>Environment (E):</strong> ${data.environment_mm}</div>\n                <div class="cprf-section" style="--primary-color: #dc3545;"><strong>Lighting (L):</strong> ${data.lighting_mm}</div>\n                <div class="cprf-section" style="--primary-color: #dc3545;"><strong>Scene Dynamics (S):</strong> ${data.camera_mm}</div>\n                <div class="cprf-section" style="--primary-color: #dc3545;"><strong>Audio (A):</strong> ${data.audio_mm}</div>\n            `}else{title.textContent="❓ Unknown Prompt Type";innerHTML=`<p>The prompt source could not be identified.</p>`}detailsDiv.innerHTML=innerHTML;finalPromptPre.textContent=data.final_prompt_en;localStorage.removeItem("promptData")}else{title.textContent="❌ Error: Prompt Data Missing";detailsDiv.innerHTML=`<p>Prompt data could not be retrieved. Please go back to the dashboard and select an editor.</p>`;finalPromptPre.textContent="Error: Translation result not found. Please check the browser console and ensure your Vercel serverless function is running."}});function copyPrompt(){const promptText=document.getElementById("final-prompt").textContent;navigator.clipboard.writeText(promptText).then(()=>{alert("English Prompt copied to clipboard!")}).catch(err=>{console.error("Could not copy text: ",err);alert("Failed to copy prompt.")})}